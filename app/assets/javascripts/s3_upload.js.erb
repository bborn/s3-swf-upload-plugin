//= require swfobject


/* S3_Upload V0.1
	Copyright (c) 2008 Elctech,
	This software is released under the MIT License <http://www.opensource.org/licenses/mit-license.php>
*/
/* S3_Upload V0.2
	Copyright (c) 2010 Nathan Colgate,
	This software is released under the MIT License <http://www.opensource.org/licenses/mit-license.php>
*/
var s3_swf;

function s3_swf_init(id, options) {
    buttonWidth = (options.buttonWidth != undefined) ? options.buttonWidth : 50;
    buttonHeight = (options.buttonHeight != undefined) ? options.buttonHeight : 50;
    flashVersion = (options.flashVersion != undefined) ? options.flashVersion : '9.0.0';
    queueSizeLimit = (options.queueSizeLimit != undefined) ? options.queueSizeLimit : 10;
    fileSizeLimit = (options.fileSizeLimit != undefined) ? options.fileSizeLimit : 524288000;
    fileTypes = (options.fileTypes != undefined) ? options.fileTypes : "*.*";
    fileTypeDescs = (options.fileTypeDescs != undefined) ? options.fileTypeDescs : "All Files";
    selectMultipleFiles = (options.selectMultipleFiles != undefined) ? options.selectMultipleFiles : true;
    keyPrefix = (options.keyPrefix != undefined) ? options.keyPrefix : "";
    signaturePath = (options.signaturePath != undefined) ? options.signaturePath : "s3_uploads.xml";
    buttonUpPath = (options.buttonUpPath != undefined) ? options.buttonUpPath : "";
    buttonOverPath = (options.buttonOverPath != undefined) ? options.buttonOverPath : "";
    buttonDownPath = (options.buttonDownPath != undefined) ? options.buttonDownPath : "";

    onFileAdd = (options.onFileAdd != undefined) ? options.onFileAdd : function (file) {};
    onFileRemove = (options.onFileRemove != undefined) ? options.onFileRemove : function (file) {};
    onFileSizeLimitReached = (options.onFileSizeLimitReached != undefined) ? options.onFileSizeLimitReached : function (file) {};
    onFileNotInQueue = (options.onFileNotInQueue != undefined) ? options.onFileNotInQueue : function (file) {};

    onQueueChange = (options.onQueueChange != undefined) ? options.onQueueChange : function (queue) {};
    onQueueClear = (options.onQueueClear != undefined) ? options.onQueueClear : function (queue) {};
    onQueueSizeLimitReached = (options.onQueueSizeLimitReached != undefined) ? options.onQueueSizeLimitReached : function (queue) {};
    onQueueEmpty = (options.onQueueEmpty != undefined) ? options.onQueueEmpty : function (queue) {};

    onUploadingStop = (options.onUploadingStop != undefined) ? options.onUploadingStop : function () {};
    onUploadingStart = (options.onUploadingStart != undefined) ? options.onUploadingStart : function () {};
    onUploadingFinish = (options.onUploadingFinish != undefined) ? options.onUploadingFinish : function () {};

    onSignatureOpen = (options.onSignatureOpen != undefined) ? options.onSignatureOpen : function (file, event) {};
    onSignatureProgress = (options.onSignatureProgress != undefined) ? options.onSignatureProgress : function (file, progress_event) {};
    onSignatureHttpStatus = (options.onSignatureHttpStatus != undefined) ? options.onSignatureHttpStatus : function (file, http_status_event) {};
    onSignatureComplete = (options.onSignatureComplete != undefined) ? options.onSignatureComplete : function (file, event) {};
    onSignatureSecurityError = (options.onSignatureSecurityError != undefined) ? options.onSignatureSecurityError : function (file, security_error_event) {};
    onSignatureIOError = (options.onSignatureIOError != undefined) ? options.onSignatureIOError : function (file, io_error_event) {};
    onSignatureXMLError = (options.onSignatureXMLError != undefined) ? options.onSignatureXMLError : function (file, error_message) {};

    onUploadOpen = (options.onUploadOpen != undefined) ? options.onUploadOpen : function (upload_options, event) {};
    onUploadProgress = (options.onUploadProgress != undefined) ? options.onUploadProgress : function (upload_options, progress_event) {};
    onUploadHttpStatus = (options.onUploadHttpStatus != undefined) ? options.onUploadHttpStatus : function (upload_options, http_status_event) {};
    onUploadComplete = (options.onUploadComplete != undefined) ? options.onUploadComplete : function (upload_options, event) {};
    onUploadIOError = (options.onUploadIOError != undefined) ? options.onUploadIOError : function (upload_options, io_error_event) {};
    onUploadSecurityError = (options.onUploadSecurityError != undefined) ? options.onUploadSecurityError : function (upload_options, security_error_event) {};
    onUploadError = (options.onUploadError != undefined) ? options.onUploadError : function (upload_options, error) {};

    var flashvars = {};
    var params = {};
    var attributes = {};
    params.wmode = "transparent";
    params.menu = "false";
    params.quality = "low";

    s3_upload_swfobject.embedSWF('<%= asset_path "s3_upload.swf" %>', id, buttonWidth, buttonHeight, flashVersion, false, flashvars, params, attributes);

    signatureUrl = window.location.protocol + '//' + window.location.host + signaturePath;
    buttonUpUrl = window.location.protocol + '//' + window.location.host + buttonUpPath;
    buttonDownUrl = window.location.protocol + '//' + window.location.host + buttonDownPath;
    buttonOverUrl = window.location.protocol + '//' + window.location.host + buttonOverPath;

    s3_swf = {
        obj: function () {
            return document[id];
        },

        init: function () {
            this.obj().init(signatureUrl, keyPrefix, fileSizeLimit, queueSizeLimit, fileTypes, fileTypeDescs, selectMultipleFiles, buttonWidth, buttonHeight, buttonUpUrl, buttonDownUrl, buttonOverUrl);
        },
        clearQueue: function () {
            this.obj().clearQueue();
        },
        startUploading: function () {
            this.obj().startUploading();
        },
        stopUploading: function () {
            this.obj().stopUploading();
        },
        removeFileFromQueue: function (index) {
            this.obj().removeFileFromQueue(index);
        },

        onFileAdd: onFileAdd,
        onFileRemove: onFileRemove,
        onFileSizeLimitReached: onFileSizeLimitReached,
        onFileNotInQueue: onFileNotInQueue,

        onQueueChange: onQueueChange,
        onQueueClear: onQueueClear,
        onQueueSizeLimitReached: onQueueSizeLimitReached,
        onQueueEmpty: onQueueEmpty,

        onUploadingStop: onUploadingStop,
        onUploadingStart: onUploadingStart,
        onUploadingFinish: onUploadingFinish,

        onSignatureOpen: onSignatureOpen,
        onSignatureProgress: onSignatureProgress,
        onSignatureHttpStatus: onSignatureHttpStatus,
        onSignatureComplete: onSignatureComplete,
        onSignatureSecurityError: onSignatureSecurityError,
        onSignatureIOError: onSignatureIOError,
        onSignatureXMLError: onSignatureXMLError,

        onUploadOpen: onUploadOpen,
        onUploadProgress: onUploadProgress,
        onUploadHttpStatus: onUploadHttpStatus,
        onUploadComplete: onUploadComplete,
        onUploadIOError: onUploadIOError,
        onUploadSecurityError: onUploadSecurityError,
        onUploadError: onUploadError

    }

    return (s3_swf);
}
